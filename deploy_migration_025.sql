-- Script de d√©ploiement rapide pour la migration 025
-- Correction de la cr√©ation d'organisations
-- Date: 2025-01-27

-- Afficher le statut avant la migration
DO $$
BEGIN
    RAISE NOTICE 'üöÄ D√âBUT DE LA MIGRATION 025';
    RAISE NOTICE '=====================================';
    RAISE NOTICE 'V√©rification de l''√©tat actuel...';
END $$;

-- 1. V√©rifier l'√©tat actuel
DO $$
DECLARE
    func_exists boolean;
    table_exists boolean;
    rls_enabled boolean;
BEGIN
    -- V√©rifier si la fonction existe d√©j√†
    SELECT EXISTS (
        SELECT 1 FROM information_schema.routines 
        WHERE routine_name = 'create_organization_with_owner'
        AND routine_schema = 'public'
    ) INTO func_exists;
    
    -- V√©rifier si la table user_organizations existe
    SELECT EXISTS (
        SELECT 1 FROM information_schema.tables 
        WHERE table_name = 'user_organizations'
        AND table_schema = 'public'
    ) INTO table_exists;
    
    -- V√©rifier si RLS est activ√© sur organisations
    SELECT relrowsecurity 
    FROM pg_class 
    WHERE relname = 'organisations' 
    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'public')
    INTO rls_enabled;
    
    RAISE NOTICE '√âtat actuel:';
    RAISE NOTICE '  - Fonction create_organization_with_owner: %', 
        CASE WHEN func_exists THEN 'EXISTE' ELSE 'MANQUANTE' END;
    RAISE NOTICE '  - Table user_organizations: %', 
        CASE WHEN table_exists THEN 'EXISTE' ELSE 'MANQUANTE' END;
    RAISE NOTICE '  - RLS sur organisations: %', 
        CASE WHEN rls_enabled THEN 'ACTIV√â' ELSE 'D√âSACTIV√â' END;
END $$;

-- 2. Appliquer la migration
\i supabase/migrations/025_fix_organization_creation.sql

-- 3. V√©rifier le succ√®s de la migration
DO $$
DECLARE
    func_exists boolean;
    table_exists boolean;
    rls_enabled boolean;
    policies_count integer;
    success boolean := true;
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üîç V√âRIFICATION POST-MIGRATION';
    RAISE NOTICE '=====================================';
    
    -- V√©rifier que la fonction a √©t√© cr√©√©e
    SELECT EXISTS (
        SELECT 1 FROM information_schema.routines 
        WHERE routine_name = 'create_organization_with_owner'
        AND routine_schema = 'public'
    ) INTO func_exists;
    
    IF NOT func_exists THEN
        RAISE NOTICE '‚ùå La fonction create_organization_with_owner n''a pas √©t√© cr√©√©e';
        success := false;
    ELSE
        RAISE NOTICE '‚úÖ Fonction create_organization_with_owner cr√©√©e avec succ√®s';
    END IF;
    
    -- V√©rifier que la table user_organizations existe
    SELECT EXISTS (
        SELECT 1 FROM information_schema.tables 
        WHERE table_name = 'user_organizations'
        AND table_schema = 'public'
    ) INTO table_exists;
    
    IF NOT table_exists THEN
        RAISE NOTICE '‚ùå La table user_organizations n''existe pas';
        success := false;
    ELSE
        RAISE NOTICE '‚úÖ Table user_organizations existe';
    END IF;
    
    -- V√©rifier que RLS est activ√© sur organisations
    SELECT relrowsecurity 
    FROM pg_class 
    WHERE relname = 'organisations' 
    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'public')
    INTO rls_enabled;
    
    IF NOT rls_enabled THEN
        RAISE NOTICE '‚ùå RLS n''est pas activ√© sur organisations';
        success := false;
    ELSE
        RAISE NOTICE '‚úÖ RLS activ√© sur organisations';
    END IF;
    
    -- Compter les politiques sur organisations
    SELECT COUNT(*) 
    FROM pg_policies 
    WHERE tablename = 'organisations' 
    AND schemaname = 'public'
    INTO policies_count;
    
    IF policies_count = 0 THEN
        RAISE NOTICE '‚ùå Aucune politique RLS sur organisations';
        success := false;
    ELSE
        RAISE NOTICE '‚úÖ % politiques RLS cr√©√©es sur organisations', policies_count;
    END IF;
    
    -- V√©rifier la structure de user_organizations
    IF table_exists THEN
        -- V√©rifier la colonne organization_id
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_name = 'user_organizations' 
            AND column_name = 'organization_id' 
            AND table_schema = 'public'
        ) THEN
            RAISE NOTICE '‚ùå Colonne organization_id manquante dans user_organizations';
            success := false;
        ELSE
            RAISE NOTICE '‚úÖ Colonne organization_id pr√©sente dans user_organizations';
        END IF;
        
        -- V√©rifier la colonne role
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_name = 'user_organizations' 
            AND column_name = 'role' 
            AND table_schema = 'public'
        ) THEN
            RAISE NOTICE '‚ùå Colonne role manquante dans user_organizations';
            success := false;
        ELSE
            RAISE NOTICE '‚úÖ Colonne role pr√©sente dans user_organizations';
        END IF;
    END IF;
    
    -- R√©sum√© final
    RAISE NOTICE '';
    RAISE NOTICE 'üéØ R√âSULTAT DE LA MIGRATION';
    RAISE NOTICE '=====================================';
    
    IF success THEN
        RAISE NOTICE '‚úÖ MIGRATION 025 TERMIN√âE AVEC SUCC√àS!';
        RAISE NOTICE '‚úÖ La cr√©ation d''organisations devrait maintenant fonctionner';
        RAISE NOTICE '';
        RAISE NOTICE 'üìã Prochaines √©tapes:';
        RAISE NOTICE '   1. Tester la cr√©ation d''organisation via l''interface';
        RAISE NOTICE '   2. V√©rifier que les relations user_organizations sont cr√©√©es';
        RAISE NOTICE '   3. Tester les permissions de modification/suppression';
    ELSE
        RAISE NOTICE '‚ùå MIGRATION 025 √âCHOU√âE';
        RAISE NOTICE '‚ùå V√©rifiez les erreurs ci-dessus et r√©essayez';
        RAISE NOTICE '';
        RAISE NOTICE 'üîß Actions recommand√©es:';
        RAISE NOTICE '   1. V√©rifier les logs d''erreur';
        RAISE NOTICE '   2. V√©rifier les permissions de la base de donn√©es';
        RAISE NOTICE '   3. Contacter l''administrateur de la base';
    END IF;
END $$;

-- 4. Afficher les informations de test
DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üß™ INFORMATIONS DE TEST';
    RAISE NOTICE '=====================================';
    RAISE NOTICE 'Pour tester la migration:';
    RAISE NOTICE '   1. Ex√©cuter: \i test_organization_creation.sql';
    RAISE NOTICE '   2. Tenter de cr√©er une organisation via l''interface';
    RAISE NOTICE '   3. V√©rifier les logs de l''application';
    RAISE NOTICE '';
    RAISE NOTICE 'üìû En cas de probl√®me:';
    RAISE NOTICE '   - Consulter ORGANIZATION_CREATION_FIX_GUIDE.md';
    RAISE NOTICE '   - V√©rifier les logs de la base de donn√©es';
    RAISE NOTICE '   - Ex√©cuter le script de test pour diagnostiquer';
END $$;
