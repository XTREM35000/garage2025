// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from '@/types/database.generated.types';

const SUPABASE_URL = "https://metssugfqsnttghfrsxx.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1ldHNzdWdmcXNudHRnaGZyc3h4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI4NDk5NjEsImV4cCI6MjA2ODQyNTk2MX0.Vc0yDgzSe6iAfgUHezVKQMm4qvzMRRjCIrTTndpE1k8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Additional functions for compatibility
export const validateSession = async () => {
  return await supabase.auth.getSession();
};

export const clearSession = async () => {
  return await supabase.auth.signOut();
};

export const createOrganizationWithAdmin = async (orgData: {
  name: string;
  adminEmail: string;
  adminName?: string;
  plan?: string;
  code?: string;
}) => {
  const { data, error } = await supabase.rpc('create_organisation_with_admin', {
    name: orgData.name,
    code: orgData.code || 'ORG012025',
    email: orgData.adminEmail,
    subscription_type: orgData.plan || 'free',
    admin_name: orgData.adminName
  });

  return { data, error };
};

export const getAvailableOrganizations = async () => {
  return await supabase.from('organisations').select('*');
};

export type CreateOrganizationResponse = {
  data: any;
  error: any;
};